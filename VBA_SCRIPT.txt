Sub Stock_Data_Analysis():
'Set dimensions
Dim total As Double, i As Long, change As Single
Dim j As Integer, start As Long, rowCount As Long
Dim percentChange As Single
Dim ws As Worksheet

For Each ws In Worksheets
' Set Title for new columns
ws.Range("I1").Value = "Ticker"
ws.Range("J1").Value = "Yearly Change"
ws.Range("K1").Value = "Percent Change"
ws.Range("L1").Value = "Total Stock Volume"
ws.Range("P1").Value = "Ticker"
ws.Range("Q1").Value = "Value"
ws.Range("O2").Value = "Greatest % Increase"
ws.Range("O3").Value = "Greatest % decrease"
ws.Range("O4").Value = "Greatest Total Volume"

 ' Set initial values
    j = 0
    total = 0
    change = 0
    start = 2
    
 ' Get the last row number with data on a worksheet
   rowCount = ws.Cells(Rows.Count, "A").End(xlUp).Row
   
 ' Loop through the row
   For i = 2 To rowCount
   
       ' If the ticker change print results
       If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
             ' Stores result in variable
             total = total + ws.Cells(i, 7).Value
             ' Avoid zero total volume in denominator
             If total = 0 Then
                ' Print the results
                ws.Range("I" & 2 + j).Value = Cells(i, 1).Value
                ws.Range("J" & 2 + j).Value = 0
                ws.Range("K" & 2 + j).Value = "%" & 0
                ws.Range("L" & 2 + j).Value = 0
                
            Else
                ' Find the first non zero starting value
                If ws.Cells(start, 3).Value = 0 Then
                    For find_value = start To i
                        If ws.Cells(find_value, 3).Value <> 0 Then
                           start = find_value
                           Exit For
                        End If
                    Next find_value
                End If
                
                ' Calculate Changes
                change = ws.Cells(i, 6) - ws.Cells(start, 3)
                percentChange = Round((change / ws.Cells(start, 3)) * 100, 2)
                
                ' Start of the next stock sticker
                start = i + 1
                
                ' Print the results
                ws.Range("I" & 2 + j).Value = ws.Cells(i, 1).Value
                ws.Range("J" & 2 + j).Value = Round(change, 2)
                ws.Range("K" & 2 + j).Value = "%" & percentChange
                ws.Range("L" & 2 + j).Value = total
                
                ' Color positive green and negative red
                Select Case change
                       Case Is > 0
                          ws.Range("J" & 2 + j).Interior.ColorIndex = 4
                        Case Is < 0
                          ws.Range("J" & 2 + j).Interior.ColorIndex = 3
                         Case Else
                          ws.Range("J" & 2 + j).Interior.ColorIndex = 0
                End Select
        End If
        
        ' Reset variable for new stock ticker
        total = 0
        change = 0
        j = j + 1
        
        ' If ticker is still the same keep adding stock volume to total
        Else
            total = total + ws.Cells(i, 7).Value
        End If
    Next i
    
 ' Take the maximun and minimum an place them in a separate part in a worsheet
   ws.Range("Q2").Value = "%" & WorksheetFunction.Max(ws.Range("K2:K" & rowCount)) * 100
   ws.Range("Q3").Value = "%" & WorksheetFunction.Min(ws.Range("K2:K" & rowCount)) * 100
   ws.Range("Q4").Value = "%" & WorksheetFunction.Max(ws.Range("L2:L" & rowCount))
   
   ' Return one less because header row not a factor
   increase_number = WorksheetFunction.Match(WorksheetFunction.Max(ws.Range("K2:K" & rowCount)), ws.Range("K2:K" & rowCount), 0)
   
   decrease_number = WorksheetFunction.Match(WorksheetFunction.Min(ws.Range("K2:K" & rowCount)), ws.Range("K2:K" & rowCount), 0)
    
   volume_number = WorksheetFunction.Match(WorksheetFunction.Max(ws.Range("L2:L" & rowCount)), ws.Range("L2:L" & rowCount), 0)
    
   ' Return stock ticker with the "Greatest % Increase", "Greatest % Decrease" and the "Greatest Volume"
   ws.Range("P2") = ws.Cells(increase_number + 1, 9)
   ws.Range("P3") = ws.Cells(decrease_number + 1, 9)
   ws.Range("P4") = ws.Cells(volume_number + 1, 9)
Next ws
            
                          
End Sub
